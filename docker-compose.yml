version: "3.8"

services:
  postgres:
    image: postgres:16
    container_name: recruit-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      TZ: ${TZ}
    ports: ["${POSTGRES_PORT}:5432"]
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d:ro

  # üîß PRODUCTION: Ïô∏Î∂Ä OpenSearch ÌÅ¥Îü¨Ïä§ÌÑ∞ ÏÇ¨Ïö© Ïãú Ïù¥ ÏÑúÎπÑÏä§ Ï†úÍ±∞
  # docker-compose.prod.ymlÏóêÏÑú opensearch ÏÑúÎπÑÏä§Î•º Ï£ºÏÑù Ï≤òÎ¶¨ÌïòÍ≥†
  # OPENSEARCH_URL ÌôòÍ≤ΩÎ≥ÄÏàòÎ•º Ïô∏Î∂Ä ÌÅ¥Îü¨Ïä§ÌÑ∞ Ï£ºÏÜåÎ°ú Î≥ÄÍ≤Ω
  opensearch:
    image: opensearchproject/opensearch:2.13.0
    container_name: opensearch
    environment:
      - discovery.type=single-node  # üîß PRODUCTION: ÌÅ¥Îü¨Ïä§ÌÑ∞ Î™®ÎìúÎ°ú Î≥ÄÍ≤Ω
      - plugins.security.disabled=true  # ‚ö†Ô∏è PRODUCTION: Î∞òÎìúÏãú falseÎ°ú Î≥ÄÍ≤Ω (Î≥¥Ïïà ÌôúÏÑ±Ìôî)
      - "OPENSEARCH_JAVA_OPTS=-Xms1g -Xmx1g"  # üîß PRODUCTION: ÏÑúÎ≤Ñ Î©îÎ™®Î¶¨Ïóê ÎßûÍ≤å Ï°∞Ï†ï (Í∂åÏû•: Ìûô Î©îÎ™®Î¶¨ 16~32GB)
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${OPENSEARCH_INITIAL_ADMIN_PASSWORD}
    ulimits:
      memlock: { soft: -1, hard: -1 }
    ports: ["9200:9200"]  # üîß PRODUCTION: Ïô∏Î∂Ä Ï†ëÍ∑º Ï∞®Îã® Í≥†Î†§ (ÎÇ¥Î∂ÄÎßùÎßå ÌóàÏö©)
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 10s
      timeout: 5s
      retries: 20
    volumes:
      - os_data:/usr/share/opensearch/data
      - ./infra/opensearch:/usr/share/opensearch/config/user-conf:ro

  opensearch-dash:
    image: opensearchproject/opensearch-dashboards:2.13.0
    container_name: opensearch-dashboards
    ports: ["5601:5601"]
    environment:
      - OPENSEARCH_HOSTS=http://opensearch:9200
    depends_on: [opensearch]

  airflow-webserver:
    build: ./airflow
    container_name: airflow-webserver
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW__WEBSERVER__RBAC: "True"
      AIRFLOW__WEBSERVER__EXPOSE_CONFIG: "True"
      AIRFLOW__CORE__TEST_CONNECTION: "Enabled"
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      _AIRFLOW_WWW_USER_USERNAME: airflow
      _AIRFLOW_WWW_USER_PASSWORD: airflow
      TZ: ${TZ}
    command: bash -c "airflow db migrate && airflow users create --role Admin --username $$ _AIRFLOW_WWW_USER_USERNAME --password $$ _AIRFLOW_WWW_USER_PASSWORD --firstname Admin --lastname User --email admin@example.com || true && airflow webserver"
    ports: ["8081:8080"]
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/plugins:/opt/airflow/plugins
    depends_on:
      - postgres

  airflow-scheduler:
    build: ./airflow
    container_name: airflow-scheduler
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      TZ: ${TZ}
      # Oracle source connection
      ORACLE_HOST: oracle-new
      ORACLE_PORT: 1521
      ORACLE_SERVICE: XEPDB1
      ORACLE_USER: hr
      ORACLE_PASSWORD: admin1234
      # PostgreSQL target connection
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      # OpenSearch connection
      # üîß PRODUCTION: Ïô∏Î∂Ä OpenSearch URLÎ°ú Î≥ÄÍ≤Ω (Ïòà: http://10.0.0.13:9200)
      OPENSEARCH_URL: ${OPENSEARCH_URL}
      OS_CAND_INDEX: candidates
      # üîß PRODUCTION: Î≥¥ÏïàÏù¥ ÌôúÏÑ±ÌôîÎêú Í≤ΩÏö∞ Ï∂îÍ∞Ä
      # OPENSEARCH_USER: admin
      # OPENSEARCH_PASSWORD: ${OPENSEARCH_PASSWORD}
      # Embedding configuration
      EMBED_MODEL: sentence-transformers/all-MiniLM-L6-v2
      EMBED_DIM: 384
    command: bash -c "airflow scheduler"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/plugins:/opt/airflow/plugins
    depends_on:
      - airflow-webserver

  backend:
    build: ./backend
    container_name: recruit-backend
    environment:
      OPENSEARCH_URL: ${OPENSEARCH_URL}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      LLM8B_URL: ${LLM8B_URL}
      LLM70B_URL: ${LLM70B_URL}
      LLM8B_MODEL: ${LLM8B_MODEL}
      LLM70B_MODEL: ${LLM70B_MODEL}
      LLM_API_KEY: ${LLM_API_KEY}
      EMBED_MODEL: sentence-transformers/all-MiniLM-L6-v2
      EMBED_DIM: 384
      TZ: ${TZ}
    ports: ["8000:8000"]
    volumes:
      - ./backend:/app
      - ./scripts:/app/scripts
      - ./infra:/app/infra
    depends_on:
      opensearch:
        condition: service_healthy
      postgres:
        condition: service_started

  frontend:
    build: ./frontend
    container_name: recruit-frontend
    environment:
      VITE_API_BASE: ${VITE_API_BASE}
      TZ: ${TZ}
    ports: ["5173:5173"]
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    command: ["npm", "run", "dev", "--", "--host"]

volumes:
  pg_data:
  os_data:
