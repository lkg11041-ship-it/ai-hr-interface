# ============================================================================
# 폐쇄망 환경 설정 파일 (.env.offline)
# ============================================================================
#
# 이 파일은 폐쇄망(Air-Gapped) 환경에서 Airflow를 배포하기 위한 설정입니다.
# Oracle → PostgreSQL ETL 기능만 사용합니다.
#
# 사용 방법:
#   1. 이 파일을 .env로 복사: cp .env.offline .env
#   2. 아래 설정값들을 실제 환경에 맞게 수정
#   3. docker-compose.offline.yml로 배포
#
# ============================================================================

# ============================================================================
# 기본 설정
# ============================================================================
RUN_MODE=offline
TZ=Asia/Seoul

# ============================================================================
# Airflow 관리자 계정 설정
# ============================================================================
# Airflow 웹 UI 접속 계정
# 웹 브라우저에서 http://<서버IP>:8081 로 접속 시 사용
AIRFLOW_ADMIN_USER=admin
AIRFLOW_ADMIN_PASSWORD=admin

# Airflow 웹 UI 포트 (기본값: 8081)
AIRFLOW_PORT=8081

# ============================================================================
# PostgreSQL 데이터베이스 설정 (필수)
# ============================================================================
# PostgreSQL은 다음 두 가지 용도로 사용됩니다:
#   1. Airflow 메타데이터 저장 (DAG 실행 이력, 스케줄 정보 등)
#   2. Oracle에서 추출한 채용 데이터 저장 (ETL 타겟 DB)
#
# 🔧 설정 방법:
#   - POSTGRES_HOST: PostgreSQL 서버 IP 주소 (예: 10.0.0.11)
#   - POSTGRES_PORT: PostgreSQL 포트 (기본값: 5432)
#   - POSTGRES_DB: 데이터베이스 이름 (기본값: recruit)
#   - POSTGRES_USER: 접속 계정
#   - POSTGRES_PASSWORD: 접속 비밀번호
#
# 📋 사전 준비사항:
#   1. PostgreSQL 서버에 rsaidb 데이터베이스 생성
#      CREATE DATABASE rsaidb;
#   2. rs_ai_user 계정 생성 및 권한 부여
#      CREATE USER rs_ai_user WITH PASSWORD 'tlstprP1@#';
#      GRANT ALL PRIVILEGES ON DATABASE rsaidb TO rs_ai_user;
#   3. Airflow 서버에서 PostgreSQL 접속 가능 여부 확인
#      psql -h 10.149.172.233 -p 5432 -U rs_ai_user -d rsaidb
#
POSTGRES_HOST=10.149.172.233
POSTGRES_PORT=5432
POSTGRES_DB=rsaidb
POSTGRES_USER=rs_ai_user
POSTGRES_PASSWORD=tlstprP1@#

# ============================================================================
# Oracle 데이터베이스 설정 (필수)
# ============================================================================
# Oracle은 ETL 소스 데이터베이스입니다.
# Airflow는 매일 02:30에 Oracle에서 데이터를 추출하여 PostgreSQL로 적재합니다.
#
# 🔧 설정 방법:
#   - ORACLE_HOST: Oracle 서버 IP 주소 (예: 10.0.0.21)
#   - ORACLE_PORT: Oracle 리스너 포트 (기본값: 1521)
#   - ORACLE_SERVICE: Oracle 서비스명 (예: ORCLPDB1, ORCL, XE 등)
#   - ORACLE_USER: Oracle 접속 계정
#   - ORACLE_PASSWORD: Oracle 접속 비밀번호
#
# 📋 사전 준비사항:
#   1. Oracle 계정에 다음 테이블 조회 권한 필요:
#      - app.applicant_info (지원자 정보)
#      SQL> GRANT SELECT ON app.applicant_info TO IF_IC0_TEMP_USER;
#
#   2. Oracle 서비스명 확인 방법:
#      SQL> SELECT VALUE FROM V$PARAMETER WHERE NAME='service_names';
#      또는
#      SQL> SELECT SYS_CONTEXT('USERENV','SERVICE_NAME') FROM DUAL;
#
#   3. Airflow 서버에서 Oracle 접속 가능 여부 확인:
#      방법 1 (telnet - 포트 연결 확인):
#        telnet 10.253.41.229 1521
#      방법 2 (Python 테스트 - Docker 컨테이너 내부에서):
#        docker exec -it airflow-webserver python -c "import oracledb; conn=oracledb.connect(user='IF_IC0_TEMP_USER', password='eykk1275#', host='10.253.41.229', port=1521, service_name='ORCLPDB1'); print('Oracle Connected!'); conn.close()"
#
#   4. 방화벽에서 Oracle 포트(1521) 허용 확인
#
# ⚠️ 주의사항:
#   - python-oracledb Thin Mode 사용 (Oracle Instant Client 설치 불필요)
#   - cx_Oracle 대신 python-oracledb 사용 (Pure Python 구현, 폐쇄망 지원)
#   - ORACLE_SERVICE는 SID가 아닌 SERVICE_NAME을 사용해야 함
#   - 예시:
#     ✅ 올바른 예: ORACLE_SERVICE=ORCLPDB1  (서비스명)
#     ❌ 잘못된 예: ORACLE_SERVICE=ORCL      (SID)
#
# 🔍 Oracle 연결 문제 해결:
#   1. "ORA-12514: TNS:listener does not currently know of service"
#      → ORACLE_SERVICE 값을 SERVICE_NAME으로 변경 (SID 아님)
#      → 확인: SELECT VALUE FROM V$PARAMETER WHERE NAME='service_names';
#   2. "ORA-12541: TNS:no listener"
#      → ORACLE_HOST, ORACLE_PORT 확인 및 방화벽 점검
#      → telnet 10.253.41.229 1521 으로 포트 확인
#   3. "ORA-01017: invalid username/password"
#      → ORACLE_USER, ORACLE_PASSWORD 확인
#   4. "ORA-12154: TNS:could not resolve the connect identifier"
#      → ORACLE_SERVICE 확인 (대소문자 구분)
#   5. "ORA-00942: table or view does not exist"
#      → app.applicant_info 테이블 존재 확인
#      → SELECT 권한 확인: SELECT * FROM USER_TAB_PRIVS WHERE TABLE_NAME='APPLICANT_INFO';
#
ORACLE_HOST=10.253.41.229
ORACLE_PORT=1521
ORACLE_SERVICE=ORCLPDB1
ORACLE_USER=IF_IC0_TEMP_USER
ORACLE_PASSWORD=eykk1275#

# ============================================================================
# 네트워크 및 방화벽 체크리스트
# ============================================================================
# 폐쇄망 환경에서 다음 연결이 가능한지 확인하세요:
#
# 1. Airflow → PostgreSQL 연결:
#    telnet <POSTGRES_HOST> 5432
#
# 2. Airflow → Oracle 연결:
#    telnet <ORACLE_HOST> 1521
#
# 3. 관리자 PC → Airflow 웹 UI 연결:
#    curl http://<Airflow서버IP>:8081/health
#
# ============================================================================

# ============================================================================
# DAG 스케줄 정보 (참고용)
# ============================================================================
# 다음 DAG가 자동으로 실행됩니다:
#
# 1. etl_oracle_to_postgres_recruit_daily
#    - 실행 시간: 매일 02:30 (Asia/Seoul)
#    - 기능: Oracle app.applicant_info → PostgreSQL app.applicant_info
#    - 전략: Full Reload (TRUNCATE + INSERT, 직접 적재)
#    - 데이터: 149개 컬럼 전체 적재
#
# 웹 UI에서 DAG 활성화/비활성화 가능:
#   http://<서버IP>:8081
#
# ============================================================================

# ============================================================================
# 선택 사항 (필요시 설정)
# ============================================================================

# Slack 알림 (선택 사항)
# DAG 실패 시 Slack 알림을 받으려면 Webhook URL 설정
# SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/WEBHOOK/URL

# 로그 레벨 (선택 사항)
# AIRFLOW__LOGGING__LOGGING_LEVEL=INFO

# ============================================================================
# 사용하지 않는 설정 (폐쇄망 ETL 전용이므로 불필요)
# ============================================================================
# 다음 설정들은 OpenSearch/Vector 검색 기능에서만 사용되므로 설정 불필요:
#   - OPENSEARCH_URL
#   - OPENSEARCH_USER
#   - OPENSEARCH_PASSWORD
#   - LLM8B_URL / LLM70B_URL
#   - VITE_API_BASE
#
# ============================================================================
