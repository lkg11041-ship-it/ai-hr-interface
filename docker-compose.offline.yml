# ============================================================================
# Docker Compose for Offline (Air-Gapped) Production Environment
# ============================================================================
#
# Ïù¥ ÌååÏùºÏùÄ ÌèêÏáÑÎßù ÌôòÍ≤ΩÏóêÏÑú AirflowÎ•º Î∞∞Ìè¨ÌïòÍ∏∞ ÏúÑÌïú ÏÑ§Ï†ïÏûÖÎãàÎã§.
#
# ÏÇ¨Ïö© Î∞©Î≤ï:
#   docker compose -f docker-compose.yml -f docker-compose.offline.yml --env-file .env up -d
#
# ÏÇ¨Ï†Ñ Ï§ÄÎπÑ:
#   1. Î™®Îì† Docker Ïù¥ÎØ∏ÏßÄÎ•º tar ÌååÏùºÎ°ú Ï†ÄÏû•
#   2. ÌèêÏáÑÎßù ÏÑúÎ≤ÑÎ°ú Ï†ÑÏÜ°
#   3. docker loadÎ°ú Ïù¥ÎØ∏ÏßÄ Î°úÎìú
#   4. Ïù¥ ÌååÏùº ÏÇ¨Ïö©ÌïòÏó¨ Î∞∞Ìè¨
# ============================================================================

version: "3.8"

services:
  # ==========================================================================
  # PostgreSQL (ÌèêÏáÑÎßùÏóêÏÑúÎäî Ïô∏Î∂Ä DB ÏÇ¨Ïö© Í∂åÏû•)
  # ==========================================================================
  postgres:
    profiles: ["with-local-db"]  # Î°úÏª¨ DB ÏÇ¨Ïö© ÏãúÏóêÎßå ÌôúÏÑ±Ìôî
    image: postgres:16
    # Ïù¥ÎØ∏ÏßÄ pull Ï†ïÏ±Ö: Î°úÏª¨ Ïù¥ÎØ∏ÏßÄÎßå ÏÇ¨Ïö©
    pull_policy: never

  # ==========================================================================
  # OpenSearch (ÌèêÏáÑÎßùÏóêÏÑúÎäî Ïô∏Î∂Ä ÌÅ¥Îü¨Ïä§ÌÑ∞ ÏÇ¨Ïö© Í∂åÏû•)
  # ==========================================================================
  opensearch:
    profiles: ["with-local-search"]  # Î°úÏª¨ OpenSearch ÏÇ¨Ïö© ÏãúÏóêÎßå ÌôúÏÑ±Ìôî
    image: opensearchproject/opensearch:2.13.0
    pull_policy: never

  opensearch-dash:
    profiles: ["with-local-search"]
    image: opensearchproject/opensearch-dashboards:2.13.0
    pull_policy: never

  # ==========================================================================
  # Airflow Webserver (ÌèêÏáÑÎßù Ï†ÑÏö© Ïù¥ÎØ∏ÏßÄ ÏÇ¨Ïö©)
  # ==========================================================================
  airflow-webserver:
    # ÌèêÏáÑÎßù Ï†ÑÏö© Ïù¥ÎØ∏ÏßÄ ÏÇ¨Ïö© (ÎØ∏Î¶¨ ÎπåÎìúÎêú Ïù¥ÎØ∏ÏßÄ)
    image: recruit-airflow:offline
    pull_policy: never
    build:
      context: ./airflow
      dockerfile: Dockerfile.offline
    environment:
      # Airflow ÏÑ§Ï†ï
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW__WEBSERVER__RBAC: "True"
      AIRFLOW__WEBSERVER__EXPOSE_CONFIG: "True"
      AIRFLOW__CORE__TEST_CONNECTION: "Enabled"
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}

      # Admin Í≥ÑÏ†ï
      _AIRFLOW_WWW_USER_USERNAME: ${AIRFLOW_ADMIN_USER:-admin}
      _AIRFLOW_WWW_USER_PASSWORD: ${AIRFLOW_ADMIN_PASSWORD:-admin}

      # Timezone
      TZ: ${TZ:-Asia/Seoul}

      # Ïô∏Î∂Ä DB Ïó∞Í≤∞ (ÌïÑÏàò)
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

      # Oracle Ïó∞Í≤∞
      ORACLE_HOST: ${ORACLE_HOST}
      ORACLE_PORT: ${ORACLE_PORT}
      ORACLE_SERVICE: ${ORACLE_SERVICE}
      ORACLE_USER: ${ORACLE_USER}
      ORACLE_PASSWORD: ${ORACLE_PASSWORD}

      # OpenSearch Ïó∞Í≤∞
      OPENSEARCH_URL: ${OPENSEARCH_URL}
      OPENSEARCH_USER: ${OPENSEARCH_USER:-}
      OPENSEARCH_PASSWORD: ${OPENSEARCH_PASSWORD:-}
      OS_CAND_INDEX: ${OS_CAND_INDEX:-candidates}

      # Embedding ÏÑ§Ï†ï
      EMBED_MODEL: sentence-transformers/all-MiniLM-L6-v2
      EMBED_DIM: 384

      # üîß OFFLINE: HuggingFace Î™®Îç∏ Ï∫êÏãú ÎîîÎ†âÌÜ†Î¶¨ (Ïù¥ÎØ∏ÏßÄÏóê Ìè¨Ìï®Îêú Î™®Îç∏ ÏÇ¨Ïö©)
      TRANSFORMERS_CACHE: /opt/airflow/.cache/huggingface
      HF_HOME: /opt/airflow/.cache/huggingface
      SENTENCE_TRANSFORMERS_HOME: /opt/airflow/.cache/sentence_transformers

    command: >
      bash -c "
      airflow db migrate &&
      airflow users create --role Admin --username $$_AIRFLOW_WWW_USER_USERNAME --password $$_AIRFLOW_WWW_USER_PASSWORD --firstname Admin --lastname User --email admin@example.com || true &&
      airflow webserver
      "

    ports:
      - "${AIRFLOW_PORT:-8081}:8080"

    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/plugins:/opt/airflow/plugins
      - airflow_logs:/opt/airflow/logs
      # üîß OFFLINE: Î™®Îç∏ Ï∫êÏãú Î≥ºÎ•® (Ïû¨ÏãúÏûë Ïãú Î™®Îç∏ Î≥¥Ï°¥)
      - airflow_cache:/opt/airflow/.cache

    restart: unless-stopped

    # Ìó¨Ïä§Ï≤¥ÌÅ¨
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # ==========================================================================
  # Airflow Scheduler (ÌèêÏáÑÎßù Ï†ÑÏö© Ïù¥ÎØ∏ÏßÄ ÏÇ¨Ïö©)
  # ==========================================================================
  airflow-scheduler:
    image: recruit-airflow:offline
    pull_policy: never
    build:
      context: ./airflow
      dockerfile: Dockerfile.offline
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      TZ: ${TZ:-Asia/Seoul}

      # Ïô∏Î∂Ä DB Ïó∞Í≤∞
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

      # Oracle Ïó∞Í≤∞
      ORACLE_HOST: ${ORACLE_HOST}
      ORACLE_PORT: ${ORACLE_PORT}
      ORACLE_SERVICE: ${ORACLE_SERVICE}
      ORACLE_USER: ${ORACLE_USER}
      ORACLE_PASSWORD: ${ORACLE_PASSWORD}

      # OpenSearch Ïó∞Í≤∞
      OPENSEARCH_URL: ${OPENSEARCH_URL}
      OPENSEARCH_USER: ${OPENSEARCH_USER:-}
      OPENSEARCH_PASSWORD: ${OPENSEARCH_PASSWORD:-}
      OS_CAND_INDEX: ${OS_CAND_INDEX:-candidates}

      # Embedding ÏÑ§Ï†ï
      EMBED_MODEL: sentence-transformers/all-MiniLM-L6-v2
      EMBED_DIM: 384

      # üîß OFFLINE: HuggingFace Î™®Îç∏ Ï∫êÏãú (Ïù¥ÎØ∏ÏßÄÏóê Ìè¨Ìï®Îêú Î™®Îç∏ ÏÇ¨Ïö©)
      TRANSFORMERS_CACHE: /opt/airflow/.cache/huggingface
      HF_HOME: /opt/airflow/.cache/huggingface
      SENTENCE_TRANSFORMERS_HOME: /opt/airflow/.cache/sentence_transformers

    command: bash -c "airflow scheduler"

    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/plugins:/opt/airflow/plugins
      - airflow_logs:/opt/airflow/logs
      # üîß OFFLINE: Î™®Îç∏ Ï∫êÏãú Î≥ºÎ•® (webserverÏôÄ Í≥µÏú†)
      - airflow_cache:/opt/airflow/.cache

    restart: unless-stopped

    depends_on:
      airflow-webserver:
        condition: service_healthy

  # ==========================================================================
  # Backend (ÌèêÏáÑÎßùÏóêÏÑúÎäî Î≥ÑÎèÑ ÎπåÎìú ÌïÑÏöî)
  # ==========================================================================
  backend:
    image: recruit-backend:offline
    pull_policy: never
    build:
      context: ./backend
    environment:
      RUN_MODE: ${RUN_MODE:-prod}
      OPENSEARCH_URL: ${OPENSEARCH_URL}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      LLM8B_URL: ${LLM8B_URL}
      LLM70B_URL: ${LLM70B_URL}
      LLM8B_MODEL: ${LLM8B_MODEL}
      LLM70B_MODEL: ${LLM70B_MODEL}
      LLM_API_KEY: ${LLM_API_KEY:-}
      EMBED_MODEL: sentence-transformers/all-MiniLM-L6-v2
      EMBED_DIM: 384
      TZ: ${TZ:-Asia/Seoul}
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    volumes:
      - ./backend:/app
      - ./scripts:/app/scripts
      - ./infra:/app/infra
    restart: unless-stopped

  # ==========================================================================
  # Frontend (ÌèêÏáÑÎßùÏóêÏÑúÎäî Î≥ÑÎèÑ ÎπåÎìú ÌïÑÏöî)
  # ==========================================================================
  frontend:
    image: recruit-frontend:offline
    pull_policy: never
    build:
      context: ./frontend
    environment:
      VITE_API_BASE: ${VITE_API_BASE:-http://backend:8000}
      TZ: ${TZ:-Asia/Seoul}
    ports:
      - "${FRONTEND_PORT:-5173}:5173"
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    command: ["npm", "run", "dev", "--", "--host"]
    restart: unless-stopped

# ============================================================================
# Volumes (Named Volumes for Data Persistence)
# ============================================================================
volumes:
  airflow_logs:
    driver: local
  airflow_cache:
    driver: local
    # üîß OFFLINE: ÏûÑÎ≤†Îî© Î™®Îç∏ Ï∫êÏãú Ï†ÄÏû• (ÏïΩ 80MB)

# ============================================================================
# Networks (Optional)
# ============================================================================
networks:
  default:
    name: recruit-ai-offline
    driver: bridge
