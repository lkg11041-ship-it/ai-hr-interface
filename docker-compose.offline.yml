# ============================================================================
# Docker Compose for Offline (Air-Gapped) Airflow Deployment
# ============================================================================
#
# Oracle → PostgreSQL ETL 전용 폐쇄망 배포 설정
#
# 사용 방법:
#   docker compose -f docker-compose.offline.yml --env-file .env up -d
#
# 사전 준비:
#   1. Airflow Docker 이미지를 tar 파일로 저장
#   2. 폐쇄망 서버로 전송
#   3. docker load로 이미지 로드
#   4. 이 파일 사용하여 배포
#
# 주의:
#   - PostgreSQL과 Oracle은 외부 DB를 사용합니다 (.env에 설정)
#   - OpenSearch 벡터 인덱싱 기능은 포함되지 않습니다
# ============================================================================

version: "3.8"

services:
  # ==========================================================================
  # Airflow Webserver (폐쇄망 전용 이미지 사용)
  # ==========================================================================
  airflow-webserver:
    container_name: airflow-webserver
    # 폐쇄망 전용 이미지 사용 (미리 빌드된 이미지)
    image: recruit-airflow:offline
    pull_policy: never
    build:
      context: ./airflow
      dockerfile: Dockerfile.offline

    environment:
      # Airflow 설정
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW__WEBSERVER__RBAC: "True"
      AIRFLOW__WEBSERVER__EXPOSE_CONFIG: "True"
      AIRFLOW__CORE__TEST_CONNECTION: "Enabled"
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}

      # Admin 계정
      _AIRFLOW_WWW_USER_USERNAME: ${AIRFLOW_ADMIN_USER:-admin}
      _AIRFLOW_WWW_USER_PASSWORD: ${AIRFLOW_ADMIN_PASSWORD:-admin}

      # Timezone
      TZ: ${TZ:-Asia/Seoul}

      # 외부 PostgreSQL 연결 (필수)
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

      # Oracle 연결 (ETL 소스)
      ORACLE_HOST: ${ORACLE_HOST}
      ORACLE_PORT: ${ORACLE_PORT}
      ORACLE_SERVICE: ${ORACLE_SERVICE}
      ORACLE_USER: ${ORACLE_USER}
      ORACLE_PASSWORD: ${ORACLE_PASSWORD}

    command: >
      bash -c "
      airflow db migrate &&
      airflow users create --role Admin --username $$_AIRFLOW_WWW_USER_USERNAME --password $$_AIRFLOW_WWW_USER_PASSWORD --firstname Admin --lastname User --email admin@example.com || true &&
      airflow webserver
      "

    ports:
      - "${AIRFLOW_PORT:-8081}:8080"

    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/plugins:/opt/airflow/plugins
      - airflow_logs:/opt/airflow/logs

    restart: unless-stopped

    # 헬스체크
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # ==========================================================================
  # Airflow Scheduler (폐쇄망 전용 이미지 사용)
  # ==========================================================================
  airflow-scheduler:
    container_name: airflow-scheduler
    image: recruit-airflow:offline
    pull_policy: never
    build:
      context: ./airflow
      dockerfile: Dockerfile.offline

    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      TZ: ${TZ:-Asia/Seoul}

      # 외부 PostgreSQL 연결
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

      # Oracle 연결
      ORACLE_HOST: ${ORACLE_HOST}
      ORACLE_PORT: ${ORACLE_PORT}
      ORACLE_SERVICE: ${ORACLE_SERVICE}
      ORACLE_USER: ${ORACLE_USER}
      ORACLE_PASSWORD: ${ORACLE_PASSWORD}

    command: bash -c "airflow scheduler"

    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/plugins:/opt/airflow/plugins
      - airflow_logs:/opt/airflow/logs

    restart: unless-stopped

    depends_on:
      airflow-webserver:
        condition: service_healthy

# ============================================================================
# Volumes (Named Volumes for Data Persistence)
# ============================================================================
volumes:
  airflow_logs:
    driver: local
    # Airflow 로그 저장

# ============================================================================
# Networks
# ============================================================================
networks:
  default:
    name: recruit-ai-offline
    driver: bridge
