# ============================================================================
# Airflow Dockerfile for Offline (Air-Gapped) Environment
# ============================================================================
#
# Oracle → PostgreSQL ETL 전용 폐쇄망 배포 이미지
#
# 폐쇄망 배포 방법:
# 1. 인터넷 연결된 환경에서 이미지 빌드
# 2. 이미지를 tar 파일로 저장
# 3. 폐쇄망 서버로 tar 파일 전송
# 4. tar 파일을 이미지로 로드
#
# 빌드 명령어 (인터넷 연결 환경):
#   docker build -f airflow/Dockerfile.offline -t recruit-airflow:offline ./airflow
#
# 이미지 저장 (인터넷 연결 환경):
#   docker save recruit-airflow:offline -o recruit-airflow-offline.tar
#
# 이미지 로드 (폐쇄망 환경):
#   docker load -i recruit-airflow-offline.tar
# ============================================================================

FROM apache/airflow:2.9.2-python3.11

# ============================================================================
# Stage 1: System Dependencies
# ============================================================================
USER root

# 시스템 패키지 설치 (apt 캐시 유지하지 않음)
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        build-essential \
        default-libmysqlclient-dev \
        curl \
        wget \
        vim \
        net-tools \
        telnet \
        iputils-ping && \
    rm -rf /var/lib/apt/lists/*

# ============================================================================
# Stage 2: Python Dependencies (ETL 전용)
# ============================================================================
USER airflow

# requirements.txt 복사 (의존성 버전 고정)
COPY requirements-offline.txt /tmp/requirements-offline.txt

# Python 패키지 설치 (Oracle → PostgreSQL ETL에 필요한 최소 패키지만 포함)
# python-oracledb (Thin mode):
#   - Pure Python 구현으로 Oracle Instant Client 불필요
#   - cx_Oracle 대체 라이브러리
#   - 폐쇄망 환경에서 Oracle 연결 가능
RUN pip install --no-cache-dir -r /tmp/requirements-offline.txt

# ============================================================================
# Stage 3: Health Check
# ============================================================================
# Airflow 스케줄러 헬스체크 (선택 사항)
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD airflow jobs check --job-type SchedulerJob --hostname $(hostname) || exit 1

# ============================================================================
# Labels and Metadata
# ============================================================================
LABEL maintainer="Recruit AI Team"
LABEL version="1.0.0"
LABEL description="Airflow for Oracle to PostgreSQL ETL (Offline/Air-Gapped Environment)"
LABEL environment="production-offline"

# 기본 명령어는 docker-compose에서 오버라이드됨
CMD ["airflow", "version"]
